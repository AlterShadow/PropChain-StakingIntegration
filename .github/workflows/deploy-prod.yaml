name: 'Deploy Token Dashboard to K8s Prod Environment'

on:
  push:
    branches:
      - 'main'
    paths-ignore:
      - 'Dockerfile'
      - 'docs/**'
      - '**.md'

jobs:
  deploy:
    name: Deploy Token Dashboard to Prod Environment
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: dapp-ui
      PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
      GKE_CLUSTER: ${{ secrets.GKE_CLUSTER }}
      GKE_REGION: ${{ secrets.GKE_REGION }}
      REGISTRY_REPO_NAME: ${{ secrets.GAR_REPO_NAME }}
      REGISTRY_HOST: ${{ secrets.GAR_REGISTRY_HOST }}
    steps:
      - name: Checkout repository code
        uses: actions/checkout@v2

      - name: Instantiate Versioning Variables
        id: set_vars
        run: |
          echo "date=$(date +'%Y%m%d')" >> $GITHUB_OUTPUT
          echo "short_sha=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Authenticate with Docker Images Pusher service account
        uses: google-github-actions/auth@v0
        with:
          credentials_json: '${{ secrets.GAR_SA_CREDENTIALS }}'

      - name: Create .env file
        run: |
          echo "${{ secrets.ENV_FILE }}" > .env

      - name: Build Token Dashboard Docker Image
        run: DOCKER_BUILDKIT=1 docker build -f ./Dockerfile -t $IMAGE_NAME:latest .

      - name: Configure Docker Client
        run: |-
          gcloud auth configure-docker --quiet
          gcloud auth configure-docker $GKE_REGION-$REGISTRY_HOST --quiet

      - name: Push Docker Image to Google Artifacts Registry (GAR)
        env:
          GIT_TAG: ${{ steps.set_vars.outputs.short_sha }}-${{ steps.set_vars.outputs.date }}
        run: |-
          docker tag $IMAGE_NAME:latest $GKE_REGION-$REGISTRY_HOST/$PROJECT_ID/$REGISTRY_REPO_NAME/$IMAGE_NAME:$GIT_TAG
          docker push $GKE_REGION-$REGISTRY_HOST/$PROJECT_ID/$REGISTRY_REPO_NAME/$IMAGE_NAME:$GIT_TAG

      - name: Update deployment manifest
        env:
          GIT_TAG: ${{ steps.set_vars.outputs.short_sha }}-${{ steps.set_vars.outputs.date }}
        run: |-
          sed -i 's#${{ env.IMAGE_NAME }}:.*#${{ env.IMAGE_NAME }}:${{ env.GIT_TAG }}#g' deploy/prod-manifests/deployment.yaml
          cat deploy/prod-manifests/deployment.yaml

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1

    # Get the GKE credentials so we can deploy to the cluster
      - run: |-
          gcloud container clusters get-credentials "$GKE_CLUSTER" --region "$GKE_REGION" --project "$PROJECT_ID"

    # install Gke gcloud auth plugin so we can use kubectl
      - name: Install Gke-gcloud-auth-plugin
        run: |-
          gcloud components install gke-gcloud-auth-plugin

      # Apply all the manifests in the deploy/dev-manifests directory
      - name: Apply All Manifests
        run: |-
          kubectl apply -f ./deploy/prod-manifests/deployment.yaml
          kubectl apply -f ./deploy/prod-manifests/service.yaml
          kubectl apply -f ./deploy/prod-manifests/ingress.yaml
